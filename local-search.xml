<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>WSDL渗透测试</title>
    <link href="/2024/02/23/WSDL%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    <url>/2024/02/23/WSDL%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>通常在网站通讯中很多都会调用api接口去管理更多得信息，但是这往往会是发开人员做限制比较薄弱得地方，就可能让我们有机可乘，在一次攻防中我就遇到了这个场景</p><h2 id="WSDL"><a href="#WSDL" class="headerlink" title="WSDL"></a>WSDL</h2><p>​有人在WebService开发的时候，特别是和第三方有接口的时候，走的是SOAP协议，然后用户（或后台）给你一个WSDL文件（或网址）</p><p>​WSDL (Web Services Description Language,Web服务描述语言)是一种XML Application，他将Web服务描述定义为一组服务访问点，客户端可以通过这些服务访问点对包含面向文档信息或面向过程调用的服务进行访问(类似远程过程调用)。WSDL首先对访问的操作和访问时使用的请求&#x2F;响应消息进行抽象描述，然后将其绑定到具体的传输协议和消息格式上以最终定义具体部署的服务访问点。相关的具体部署的服务访问点通过组合就成为抽象的Web服务</p><h2 id="WSDL会产生什么漏洞"><a href="#WSDL会产生什么漏洞" class="headerlink" title="WSDL会产生什么漏洞"></a>WSDL会产生什么漏洞</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-number">1</span>.Web 应用安全漏洞:<br>   sql注入<br>   xss攻击<br>   命令执行<br>   越权<br>   LDAP注入<br>   缓冲区溢出<br>   逻辑漏洞<br>   等等<br>   <br><span class="hljs-number">2</span>.<span class="hljs-keyword">XML</span> <span class="hljs-title">相关的特殊安全漏洞:</span><br><span class="hljs-title">   XPath</span>注入<br>   XQuery注入<br>   拒绝服务攻击（SOAP 数组溢出、递归的 <span class="hljs-keyword">XML</span> <span class="hljs-title">实体声明、超大消息体）</span><br><span class="hljs-title">   信息泄漏（XML</span> External Entity File Disclosure）<br>   等等<br></code></pre></td></tr></table></figure><h2 id="实战测试"><a href="#实战测试" class="headerlink" title="实战测试"></a>实战测试</h2><p>一、 发现该站点存在WSDL网站（其实WSDL得特征还是挺明显得，但是从明面上发现没有可利用得功能点，可能经验少的人就会略过，但他不曾想到这个站点会给他带来惊喜）<strong>但是这不是WSDL的单一特征</strong></p><p><strong>hunter语法: web.body&#x3D;”WS-Inspection “</strong></p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240223165256204.png" alt="image-20240223165256204"></p><p>二、WSDL是一个api接口我们需要利用工具或者插件去探索各个接口下的xml文档，而漏洞就是产生在这些xml文档中</p><p>我们可以直接利用<strong>burp中的插件Wsdler</strong></p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240223170100243.png" alt="image-20240223170100243"></p><p>安装完插件利用该插件去查看存在的xml包</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240223171138234.png" alt="image-20240223171138234"></p><p>发现存在xml数据包</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240223171353819.png" alt="image-20240223171353819"></p><p>接下来我们就可以对该数据包进行漏洞探测了，一般常见的就是sql注入和xxe了</p><p><strong>sql注入漏洞</strong></p><p>一般通wsdl发现的注入都是sqlserver数据库，要是又是DBA权限的话那离拿shell也不远了</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240223180901639.png" alt="image-20240223180901639"></p><p><strong>xxe漏洞</strong></p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240223180117000.png" alt="image-20240223180117000"></p>]]></content>
    
    
    <categories>
      
      <category>红队攻防</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红队-外网信息收集</title>
    <link href="/2024/02/22/%E5%A4%96%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2024/02/22/%E5%A4%96%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>现在攻防演练也很频繁，也越来越不好打，但当我们在前期信息收集做的越完善时可能就会有新的发现来帮助我们突破外网边界。</p><h3 id="域名收集"><a href="#域名收集" class="headerlink" title="域名收集"></a>域名收集</h3><h4 id="根域收集"><a href="#根域收集" class="headerlink" title="根域收集"></a>根域收集</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs perl">企查查 ：https:<span class="hljs-regexp">//</span>www.qcc.com/<br>爱企查 ：https:<span class="hljs-regexp">//ai</span>qicha.baidu.com/<br>查询旗下收购公司信息：https:<span class="hljs-regexp">//</span>www.crunchbase.com/ 这个可能更常用于src挖掘的资产收集中，查询那家单位被收购了可能被收购的公司漏洞也会要<br>小蓝本：https:<span class="hljs-regexp">//</span>www.xiaolanben.com/<br>钉钉企典：https:<span class="hljs-regexp">//</span>www.dingtalk.com/qidian/<br>自动收集工具 ：ENScan_GO   https:<span class="hljs-regexp">//gi</span>thub.com/afwu/ENScan_GO<br><br><br>ASN枚举：https:<span class="hljs-regexp">//</span>bgp.he.net/AS4509<span class="hljs-number">0</span><span class="hljs-comment">#_prefixes </span><br>通过asn枚举寻找资产，但更多用于src挖掘（推荐文章：https:<span class="hljs-regexp">//x</span>z.aliyun.com/t/<span class="hljs-number">9455</span>?time__1311=n4%2BxuDgD9AdGq4WqGNDQT4BIfdSW1Oit4D&amp;alichlgref=https%<span class="hljs-number">3</span>A%<span class="hljs-number">2</span>F%2Fwww.baidu.com%<span class="hljs-number">2</span>Flink%<span class="hljs-number">3</span>Furl%3D9itPJUbnIjx9tjQajL2HdKKad1CgTFhTFnx8OJzqe1VKV13jzg2BpuGBSoT00Z-R%26wd%<span class="hljs-number">3</span>D%26eqid%3Dc68682be000300ca0000000465d6f765）<br><br>通过上述方法收集到目标的根域以及下属单位的域名<br></code></pre></td></tr></table></figure><h4 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">常用的资产搜索引擎推荐<br>鹰图：https://hunter.qianxin.com/  新资产多但有些敏感的资产不能查看<br>fofa：https://fofa.info/  常用，老资产比较多时不时会发现边缘资产<br>quake：https://quake.360.net/quake/login<span class="hljs-comment">#/ 资产还可以敏感资产可以查看也是目前花钱最便宜的了</span><br>shodan：https://www.shodan.io/  国外资产收集平台，时不时用一下也可能会发现意外资产<br><br>注：我们在搜索时一定要对目标资产用多个语法查询资产，可能就会有新的收获，比如搜索c段、域名、备案、公司名、标题、证书、全资子公司等<br></code></pre></td></tr></table></figure><h4 id="域名收集-1"><a href="#域名收集-1" class="headerlink" title="域名收集"></a>域名收集</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">oneforall : https://github.com/shmilylty/OneForAll<br>命令单个：python3 oneforall.py --target target.com run<br>命令批量：python3 oneforall.py --targets domain.txt run<br>也是比较常用的子域名收集工具了<br><br>Sublist3r 项目地址：https://github.com/aboul3la/Sublist3r 命令：python sublist3r.py -d target.com -b -t 50 -p 80,443,21,22<br>默认参数扫描子域名<br>python sublist3r.py -d baidu.com <br>使用暴力枚举子域名<br>python sublist3r -b -d baidu.com <br><br>ksubdomain ： https://github.com/boy-hack/ksubdomain<br><br>subfinder：https://github.com/projectdiscovery/subfinder<br><br>https://www.wolframalpha.com/  国外子域收集网站<br></code></pre></td></tr></table></figure><h4 id="证书收集"><a href="#证书收集" class="headerlink" title="证书收集"></a>证书收集</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://search.censys.io/<br>https://crt.sh/<br>https://dnsdumpster.com/<br></code></pre></td></tr></table></figure><h4 id="自动资产收集"><a href="#自动资产收集" class="headerlink" title="自动资产收集"></a>自动资产收集</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">灯塔 ：https://github.com/TophantTechnology/ARL 会自动收集目标资产并探测一些敏感目录和漏洞，因为有些系统在二级目录下所以时不时会有意外收获<br>水泽：https://github.com/0x727/ShuiZe_0x727<br></code></pre></td></tr></table></figure><h4 id="谷歌-Github-语雀-语法"><a href="#谷歌-Github-语雀-语法" class="headerlink" title="谷歌&amp;Github&amp;语雀 语法"></a>谷歌&amp;Github&amp;语雀 语法</h4><p>通过google语法收集资产</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222160613354.png"></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">以及其他常用语法<br><br><span class="hljs-symbol">intext:</span><span class="hljs-string">&quot;© XXX版权所有&quot;</span><br><br><span class="hljs-symbol">site:</span> xxx.com filetype:doc 、pdf、xls<br><br><span class="hljs-symbol">site:</span> xxx.com 管理、后台、系统、密码、账号<br></code></pre></td></tr></table></figure><p><strong>Github语法</strong>  (注：在平时收集资产时可以通过github来收集一些敏感的资产)</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222173215648.png"></p><p><strong>参考语法</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&quot;token&quot;  <br>&quot;password&quot;  <br>&quot;secret&quot;  <br>&quot;passwd&quot;  <br>&quot;username&quot;  <br>&quot;key&quot;  <br>&quot;apidocs&quot;  <br>&quot;appspot&quot;  <br>&quot;auth&quot;  <br>&quot;aws\_access&quot;  <br>&quot;config&quot;  <br>&quot;credentials&quot;  <br>&quot;dbuser&quot;  <br>&quot;ftp&quot;  <br>&quot;login&quot;  <br>&quot;mailchimp&quot;  <br>&quot;mailgun&quot;  <br>&quot;mysql&quot;  <br>&quot;pass&quot;  <br>&quot;pem private&quot;  <br>&quot;prod&quot;  <br>&quot;pwd&quot;  <br>&quot;secure&quot;  <br>&quot;ssh&quot;  <br>&quot;staging&quot;  <br>&quot;stg&quot;  <br>&quot;stripe&quot;  <br>&quot;swagger&quot;  <br>&quot;testuser&quot;  <br>&quot;jdbc&quot;  <br><span class="hljs-keyword">extension</span>:pem private  <br><span class="hljs-keyword">extension</span>:ppk private  <br><span class="hljs-keyword">extension</span>:<span class="hljs-keyword">sql</span> mysql dump <span class="hljs-keyword">password</span>  <br><span class="hljs-keyword">extension</span>:<span class="hljs-type">json</span> api.forecast.io  <br><span class="hljs-keyword">extension</span>:<span class="hljs-type">json</span> mongolab.com  <br><span class="hljs-keyword">extension</span>:yaml mongolab.com  <br><span class="hljs-keyword">extension</span>:ica \[WFClient\] <span class="hljs-keyword">Password</span>\=  <br><span class="hljs-keyword">extension</span>:avastlic “support.avast.com”  <br><span class="hljs-keyword">extension</span>:js jsforce conn.<span class="hljs-keyword">login</span>  <br><span class="hljs-keyword">extension</span>:<span class="hljs-type">json</span> googleusercontent client\_secret  <br>“target.com” send\_keys  <br>“target.com” <span class="hljs-keyword">password</span>  <br>“target.com” api\_key  <br>“target.com” apikey  <br>“target.com” jira\_password  <br>“target.com” root\_password  <br>“target.com” <span class="hljs-keyword">access</span>\_token  <br>“target.com” config  <br>“target.com” client\_secret  <br>“target.com” <span class="hljs-keyword">user</span> auth<br></code></pre></td></tr></table></figure><p><strong>语雀信息收集</strong></p><p>可以结合目标系统以及你收集到的信息来语雀搜索敏感资料和信息，比如域名、邮箱、系统名、公司名等方法搜索</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222173521901.png"></p><h4 id="JS子域收集"><a href="#JS子域收集" class="headerlink" title="JS子域收集"></a>JS子域收集</h4><p>通过burp收集js中的根域和子域名</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222161125178.png"></p><p>通过 gospider工具收集网站内js中的其他子域</p><p>链接：<a href="https://github.com/jaeles-project/gospider">https://github.com/jaeles-project/gospider</a></p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222161255418.png"></p><p>通过SubDomainizer工具收集子域</p><p><a href="https://github.com/nsonaniya2010/SubDomainizer">https://github.com/nsonaniya2010/SubDomainizer</a></p><p>功能：</p><p>1.查找js文件中引用的子域</p><p>2.查找js文件中引用的云服务<br>3.使用香农熵公式在js文件中找到潜在的敏感项它只需要一个页面，扫描js文件进行分析。</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222161802500.png"></p><p>注：在我们收集资产中除了打web外，其实也可以尝试打他们的云服务，在很多时候发开会不小心将相关密钥放在js文件中，若要是有发现那也可以获得一定的分数，甚至能在云服务中发现更多有用的信息。</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222161817624.png"></p><h4 id="APP资产收集"><a href="#APP资产收集" class="headerlink" title="APP资产收集"></a>APP资产收集</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">七麦数据：https:<span class="hljs-regexp">//</span>www.qimai.cn/ 收集目标旗下的app<br>酷传：https:<span class="hljs-regexp">//</span>www.kuchuan.com/ 收集目标旗下的app<br>蝉应用：https:<span class="hljs-regexp">//</span>app.chandashi.com/ 收集目标旗下的app<br>豌豆荚：https:<span class="hljs-regexp">//</span>www.wandoujia.com/ 获取app历史版本<br>摸瓜：https:<span class="hljs-regexp">//m</span>ogua.co/  对app反编译收集app中的敏感信息，可能会发现新的ip、域名、密钥等信息<br>appinfoscanner：https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/kelvinBen/</span>AppInfoScanner 收集app中的敏感信息<br></code></pre></td></tr></table></figure><h4 id="小程序资产收集"><a href="#小程序资产收集" class="headerlink" title="小程序资产收集"></a>小程序资产收集</h4><p>通过微信搜索相关字以及目标公司全名</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222173928682.png"></p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222174215392.png"></p><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">naabu:https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/projectdiscovery/</span>naabu 扫描全端口快<br>Rustscan:https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/RustScan/</span>RustScan 扫描全端口快<br>vscan:https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/veo/</span>vscan 会快速扫描资产全端口、也是漏洞扫描工具<br>railgun：https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/lz520520/</span>railgun 多功能信息收集工具有全端口扫描功能但是扫描慢但我觉得准一点<br></code></pre></td></tr></table></figure><h4 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">ehole:https://github.com/ShiHuang-ESec/EHole 对收集的资产指纹识别，但是识别不全需要自己加指纹<br>Ehole_magic：https://github.com/lemonlove7/EHole_magic 魔改版，好处是可以自己添加目录路径，因为现在很多系统都在二级目录下的，我们可以在平常项目中积累一些特殊的目录放置进去说不定哪天就遇到了<br><br>就比如：xxljob的一些目录：<br>/xxl-job-admin<br>/xxl-job-admin-2.1.0<br>/job-admin<br>/job-admin/joblog<br><br>帆软：<br>/webroot/decision/login<br>/webroot<br>/webroot/decision/remote/design/channel<br><br>smartbi：<br>/smartbi/<br>/smartbi/vision/RMIServlet<br></code></pre></td></tr></table></figure><h4 id="供应链资产收集"><a href="#供应链资产收集" class="headerlink" title="供应链资产收集"></a>供应链资产收集</h4><p>在很多项目中他们的系统都会存在是第三方开发的系统，但是目标的系统不存在什么历史漏洞和弱密码，那我们就可以去收集该系统的特征去资产收集平台查询是否存在相同的站或者找到官方测试站，然后去对别的相同的站或测试站渗透测试，往往别的站或测试站就会存在弱口令等问题我们就想办法拿到测试站或相同的站的shell后拿源码去审计源码通过0day去测试我们的目标站点。该方法已经是现在攻防常走的攻击思路了，毕竟再靠历史漏洞去打真的越来越难打了，尤其是比较难的项目！</p><p><strong>怎么收集呢</strong></p><p>1、通过查看网站js源码找特征去搜</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222180242077.png"></p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222180255298.png"></p><p>2、通过查看系统图标去搜</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240223104700766.png"></p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222180534273.png"></p><p>3、搜索系统名字</p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222180619786.png"></p><p><img src="https://raw.githubusercontent.com/yywqq123/yywqq123.github.io/main/image/image-20240222180708297.png"></p><p><strong>参考文章：</strong></p><p><a href="https://mp.weixin.qq.com/s/mOC5OgKRCOWCu1BpoMt6Sw">https://mp.weixin.qq.com/s/mOC5OgKRCOWCu1BpoMt6Sw</a> </p><p><a href="https://mp.weixin.qq.com/s/S4uzxutSBAbqS3LtNlDAhQ">https://mp.weixin.qq.com/s/S4uzxutSBAbqS3LtNlDAhQ</a></p><p><strong>总结：</strong>只有前期做越好的信息收集工作可能才会有新的惊喜</p>]]></content>
    
    
    <categories>
      
      <category>红队攻防</category>
      
    </categories>
    
    
    <tags>
      
      <tag>红队</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
