{"meta":{"title":"WY3507&Blog","subtitle":"","description":"","author":"WY3507","url":"http://example.com","root":"/"},"pages":[{"title":"分类","date":"2024-02-21T08:52:39.000Z","updated":"2024-02-21T08:53:17.458Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":"1 2 3"},{"title":"博客之所以诞生","date":"2024-02-21T09:01:20.000Z","updated":"2024-02-21T09:07:00.906Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"一枚红队中的菜鸡，整日浑水摸鱼，但为了提升必须学习，会在闲暇的日子分享技术分章"}],"posts":[{"title":"红队","slug":"红队","date":"2024-02-23T03:16:31.000Z","updated":"2024-02-23T03:16:31.124Z","comments":true,"path":"2024/02/23/红队/","permalink":"http://example.com/2024/02/23/%E7%BA%A2%E9%98%9F/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"红队-外网信息收集","slug":"外网信息收集","date":"2024-02-22T06:13:27.042Z","updated":"2024-02-23T03:18:17.124Z","comments":true,"path":"2024/02/22/外网信息收集/","permalink":"http://example.com/2024/02/22/%E5%A4%96%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/","excerpt":"","text":"前言现在攻防演练也很频繁，也越来越不好打，但当我们在前期信息收集做的越完善时可能就会有新的发现来帮助我们突破外网边界。 域名收集根域收集123456789101112企查查 ：https://www.qcc.com/爱企查 ：https://aiqicha.baidu.com/查询旗下收购公司信息：https://www.crunchbase.com/ 这个可能更常用于src挖掘的资产收集中，查询那家单位被收购了可能被收购的公司漏洞也会要小蓝本：https://www.xiaolanben.com/钉钉企典：https://www.dingtalk.com/qidian/自动收集工具 ：ENScan_GO https://github.com/afwu/ENScan_GOASN枚举：https://bgp.he.net/AS45090#_prefixes 通过asn枚举寻找资产，但更多用于src挖掘（推荐文章：https://xz.aliyun.com/t/9455?time__1311=n4%2BxuDgD9AdGq4WqGNDQT4BIfdSW1Oit4D&amp;alichlgref=https%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3D9itPJUbnIjx9tjQajL2HdKKad1CgTFhTFnx8OJzqe1VKV13jzg2BpuGBSoT00Z-R%26wd%3D%26eqid%3Dc68682be000300ca0000000465d6f765）通过上述方法收集到目标的根域以及下属单位的域名 搜索引擎1234567常用的资产搜索引擎推荐鹰图：https://hunter.qianxin.com/ 新资产多但有些敏感的资产不能查看fofa：https://fofa.info/ 常用，老资产比较多时不时会发现边缘资产quake：https://quake.360.net/quake/login#/ 资产还可以敏感资产可以查看也是目前花钱最便宜的了shodan：https://www.shodan.io/ 国外资产收集平台，时不时用一下也可能会发现意外资产注：我们在搜索时一定要对目标资产用多个语法查询资产，可能就会有新的收获，比如搜索c段、域名、备案、公司名、标题、证书、全资子公司等 域名收集12345678910111213141516oneforall : https://github.com/shmilylty/OneForAll命令单个：python3 oneforall.py --target target.com run命令批量：python3 oneforall.py --targets domain.txt run也是比较常用的子域名收集工具了Sublist3r 项目地址：https://github.com/aboul3la/Sublist3r 命令：python sublist3r.py -d target.com -b -t 50 -p 80,443,21,22默认参数扫描子域名python sublist3r.py -d baidu.com 使用暴力枚举子域名python sublist3r -b -d baidu.com ksubdomain ： https://github.com/boy-hack/ksubdomainsubfinder：https://github.com/projectdiscovery/subfinderhttps://www.wolframalpha.com/ 国外子域收集网站 证书收集123https://search.censys.io/https://crt.sh/https://dnsdumpster.com/ 自动资产收集12灯塔 ：https://github.com/TophantTechnology/ARL 会自动收集目标资产并探测一些敏感目录和漏洞，因为有些系统在二级目录下所以时不时会有意外收获水泽：https://github.com/0x727/ShuiZe_0x727 谷歌&amp;Github&amp;语雀 语法通过google语法收集资产 ![](D:\\yywqq123\\Blog Space\\boke\\source_posts\\外网信息收集&#x2F;image-20240222160613354.png) 1234567以及其他常用语法intext:&quot;© XXX版权所有&quot;site: xxx.com filetype:doc 、pdf、xlssite: xxx.com 管理、后台、系统、密码、账号 Github语法 (注：在平时收集资产时可以通过github来收集一些敏感的资产) ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222173215648.png) 参考语法 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&quot;token&quot; &quot;password&quot; &quot;secret&quot; &quot;passwd&quot; &quot;username&quot; &quot;key&quot; &quot;apidocs&quot; &quot;appspot&quot; &quot;auth&quot; &quot;aws\\_access&quot; &quot;config&quot; &quot;credentials&quot; &quot;dbuser&quot; &quot;ftp&quot; &quot;login&quot; &quot;mailchimp&quot; &quot;mailgun&quot; &quot;mysql&quot; &quot;pass&quot; &quot;pem private&quot; &quot;prod&quot; &quot;pwd&quot; &quot;secure&quot; &quot;ssh&quot; &quot;staging&quot; &quot;stg&quot; &quot;stripe&quot; &quot;swagger&quot; &quot;testuser&quot; &quot;jdbc&quot; extension:pem private extension:ppk private extension:sql mysql dump password extension:json api.forecast.io extension:json mongolab.com extension:yaml mongolab.com extension:ica \\[WFClient\\] Password\\= extension:avastlic “support.avast.com” extension:js jsforce conn.login extension:json googleusercontent client\\_secret “target.com” send\\_keys “target.com” password “target.com” api\\_key “target.com” apikey “target.com” jira\\_password “target.com” root\\_password “target.com” access\\_token “target.com” config “target.com” client\\_secret “target.com” user auth 语雀信息收集 可以结合目标系统以及你收集到的信息来语雀搜索敏感资料和信息，比如域名、邮箱、系统名、公司名等方法搜索 ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222173521901.png) JS子域收集通过burp收集js中的根域和子域名 ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222161125178.png) 通过 gospider工具收集网站内js中的其他子域 链接：https://github.com/jaeles-project/gospider ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222161255418.png) 通过SubDomainizer工具收集子域 https://github.com/nsonaniya2010/SubDomainizer 功能： 1.查找js文件中引用的子域 2.查找js文件中引用的云服务3.使用香农熵公式在js文件中找到潜在的敏感项它只需要一个页面，扫描js文件进行分析。 ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222161802500.png) 注：在我们收集资产中除了打web外，其实也可以尝试打他们的云服务，在很多时候发开会不小心将相关密钥放在js文件中，若要是有发现那也可以获得一定的分数，甚至能在云服务中发现更多有用的信息。 ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222161817624.png) APP资产收集123456七麦数据：https://www.qimai.cn/ 收集目标旗下的app酷传：https://www.kuchuan.com/ 收集目标旗下的app蝉应用：https://app.chandashi.com/ 收集目标旗下的app豌豆荚：https://www.wandoujia.com/ 获取app历史版本摸瓜：https://mogua.co/ 对app反编译收集app中的敏感信息，可能会发现新的ip、域名、密钥等信息appinfoscanner：https://github.com/kelvinBen/AppInfoScanner 收集app中的敏感信息 小程序资产收集通过微信搜索相关字以及目标公司全名 ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222173928682.png) ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222174215392.png) 端口扫描1234naabu:https://github.com/projectdiscovery/naabu 扫描全端口快Rustscan:https://github.com/RustScan/RustScan 扫描全端口快vscan:https://github.com/veo/vscan 会快速扫描资产全端口、也是漏洞扫描工具railgun：https://github.com/lz520520/railgun 多功能信息收集工具有全端口扫描功能但是扫描慢但我觉得准一点 指纹识别1234567891011121314151617ehole:https://github.com/ShiHuang-ESec/EHole 对收集的资产指纹识别，但是识别不全需要自己加指纹Ehole_magic：https://github.com/lemonlove7/EHole_magic 魔改版，好处是可以自己添加目录路径，因为现在很多系统都在二级目录下的，我们可以在平常项目中积累一些特殊的目录放置进去说不定哪天就遇到了就比如：xxljob的一些目录：/xxl-job-admin/xxl-job-admin-2.1.0/job-admin/job-admin/joblog帆软：/webroot/decision/login/webroot/webroot/decision/remote/design/channelsmartbi：/smartbi//smartbi/vision/RMIServlet 供应链资产收集在很多项目中他们的系统都会存在是第三方开发的系统，但是目标的系统不存在什么历史漏洞和弱密码，那我们就可以去收集该系统的特征去资产收集平台查询是否存在相同的站或者找到官方测试站，然后去对别的相同的站或测试站渗透测试，往往别的站或测试站就会存在弱口令等问题我们就想办法拿到测试站或相同的站的shell后拿源码去审计源码通过0day去测试我们的目标站点。该方法已经是现在攻防长走的攻击思路了，毕竟再靠历史漏洞去打真的越来越难打了，尤其是比较难的项目！ 怎么收集呢 1、通过查看网站js源码找特征去搜 ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222180242077.png) ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222180255298.png) 2、通过查看系统图标去搜 ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240223104700766.png) ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222180534273.png) 3、搜索系统名字 ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222180619786.png) ![](D:\\yywqq123\\Blog Space\\boke\\themes\\fluid\\image\\image-20240222180708297.png) 总结：只有前期做越好的信息收集工作可能才会有新的惊喜","categories":[{"name":"红队攻防","slug":"红队攻防","permalink":"http://example.com/categories/%E7%BA%A2%E9%98%9F%E6%94%BB%E9%98%B2/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2024-02-21T03:06:48.698Z","updated":"2024-02-21T08:06:11.565Z","comments":true,"path":"2024/02/21/hello-world/","permalink":"http://example.com/2024/02/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"代码审计","slug":"代码审计","permalink":"http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}],"tags":[]}],"categories":[{"name":"红队攻防","slug":"红队攻防","permalink":"http://example.com/categories/%E7%BA%A2%E9%98%9F%E6%94%BB%E9%98%B2/"},{"name":"代码审计","slug":"代码审计","permalink":"http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}],"tags":[]}